{"version":3,"file":"static/js/1295.179239a3.chunk.js","mappings":"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","sources":["components/external/UserPasswordTab.js","components/ApiAdmin.js","components/external/index.js","components/Custom.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Button } from '@material-ui/core';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { FormControl } from '@mui/material';\nimport {useRecordContext, useDataProvider} from \"react-admin\";\nimport {httpAuthClient} from \"../../rav4-jsonapi-client/ra-jsonapi-client\"\nimport { useConf } from \"../../Config\";\nimport { useNotify } from 'react-admin';\n\nexport const UserPasswordTab = () => {\n    const conf = useConf();\n    const notify = useNotify();\n    const record = useRecordContext();\n    const dataProvider = useDataProvider();\n    const [pwdValue, setPwdValue] = useState(\"\");\n    const [rpwdValue, setRPwdValue] = useState(\"\");\n    const [submitColor, setSubmitColor] = useState(\"\")\n    const onPwdChange = (e) => {\n        let pwdValue = e.target.value\n        setPwdValue(pwdValue)\n        setSubmitColor(pwdValue === rpwdValue && pwdValue.length > 5  ? \"primary\" : \"\")\n        console.log(pwdValue, rpwdValue);\n    }\n    const onRPwdVerify = (e) => {\n        let rpwdValue = e.target.value\n        setRPwdValue(rpwdValue)\n        setSubmitColor(pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"\")\n        console.log(pwdValue, rpwdValue);\n        \n    }\n    const handleSubmit = () => {\n        console.log(rpwdValue);\n        if(pwdValue !== rpwdValue){\n            notify('Passwords don\\'t match',  { type: 'warning' })\n            return\n        }\n        if(pwdValue.length < 6){\n            notify('Password too short',  { type: 'warning' })\n            return\n        }\n        const data = {\n            \"password\": pwdValue\n        }\n        httpAuthClient(`${conf.api_root}/Users/${record.id}/change_password`, {\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n        .then(()=>notify('Password Changed!'))\n        .catch(()=>notify(`Error Changing Password`,  { type: 'warning' }))\n          \n    }\n\n    return (\n        <Box\n        component=\"form\"\n        sx={{\n            '& .MuiTextField-root': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        <FormControl>\n            <Grid item xs={12} spacing={4} margin={5} >\n                <Typography variant=\"body2\" component=\"p\" ><b>Change the user password</b></Typography>\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"New Password\"\n                type=\"password\"\n                onChange={onPwdChange}\n            />\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"Repeat Password\"\n                type=\"password\"\n                onChange={onRPwdVerify}\n            />\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <Button variant=\"contained\" color={submitColor} onClick={handleSubmit}>Submit</Button>\n            </Grid>\n        </FormControl>\n        </Box>\n    );\n}\n\n\nexport const ApiUserPasswordTab = () => {\n    const conf = useConf();\n    const notify = useNotify();\n    const record = useRecordContext();\n    const dataProvider = useDataProvider();\n    const [curPwdValue, setCurPwdValue] = useState(\"\");\n    const [newPwdValue, setNewPwdValue] = useState(\"\");\n    const [rpwdValue, setRPwdValue] = useState(\"\");\n    const [submitColor, setSubmitColor] = useState(\"\")\n\n    const onCurPwdChange = (e) => {\n        let pwdValue = e.target.value\n        setCurPwdValue(pwdValue)\n        setSubmitColor(pwdValue === rpwdValue && pwdValue.length > 5  ? \"primary\" : \"\")\n    }\n    const onNewPwdChange = (e) => {\n        let pwdValue = e.target.value\n        setNewPwdValue(pwdValue)\n        setSubmitColor(pwdValue === rpwdValue && pwdValue.length > 5  ? \"primary\" : \"\")\n    }\n    const onRPwdVerify = (e) => {\n        let rpwdValue = e.target.value\n        setRPwdValue(rpwdValue)\n        setSubmitColor(newPwdValue === rpwdValue && newPwdValue.length > 5 ? \"primary\" : \"\")\n    }\n    const handleSubmit = () => {\n        console.log(rpwdValue);\n        if(newPwdValue !== rpwdValue){\n            notify('Passwords don\\'t match',  { type: 'warning' })\n            return\n        }\n        if(newPwdValue.length < 1){\n            notify('Password too short',  { type: 'warning' })\n            return\n        }\n        const data = {\n            \"password\": newPwdValue\n        }\n        httpAuthClient(`${conf.api_root}/Users/${record.id}/change_password`, {\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n        .then(()=>notify('Password Changed!'))\n        .catch(()=>notify(`Error Changing Password`,  { type: 'warning' }))\n          \n    }\n\n    return (\n        <Box\n        component=\"form\"\n        sx={{\n            '& .MuiTextField-root': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n        <FormControl>\n            <Grid item xs={12} spacing={4} margin={5} >\n                <Typography variant=\"body2\" component=\"p\" ><b>Current user password</b></Typography>\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"Current Password\"\n                type=\"password\"\n                onChange={onCurPwdChange}\n            />\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n                <Typography variant=\"body2\" component=\"p\" ><b>New user password</b></Typography>\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"New Password\"\n                type=\"password\"\n                onChange={onNewPwdChange}\n            />\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <TextField\n                id=\"outlined-password-input\"\n                label=\"Repeat Password\"\n                type=\"password\"\n                onChange={onRPwdVerify}\n            />\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} >\n            <Button variant=\"contained\" color={submitColor} onClick={handleSubmit}>Submit</Button>\n            </Grid>\n        </FormControl>\n        </Box>\n    );\n}\n","import * as React from 'react';\nimport { Modal, Box, Grid, TextField  } from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\nimport Button from '@material-ui/core/Button';\nimport { useConf } from '../Config';\nimport {Loading,\n    TextInput,\n    useRecordContext,\n    useGetList\n} from 'react-admin'\nimport { useForm } from 'react-final-form';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nconst boxStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: \"75%\",\n  bgcolor: 'background.paper',\n  border: '0px solid #000',\n  boxShadow: 24,\n  p: 4,\n  textAlign: \"left\"\n};\n\nconst useStyles = makeStyles({\n  joined_field : {cursor: \"pointer\", color: \"#3f51b5\"},\n  modalStyle:{\n    position:'absolute',\n    top:'10%',\n    left:'10%',\n    overflow:'scroll',\n    height:'100%',\n    fontWeight : \"0.6em\",\n    display: 'flex'\n  },\n  db_btn: {\n    height : \"80%\",\n    position: \"relative\",\n    top: \"50%\",\n    \"-webkit-transform\": \"translateY(-50%)\",\n    \"-ms-transform\": \"translateY(-50%)\",\n    \"transform\": \"translateY(-50%)\"\n  },\n  db_grid : {\n      \"& .MuiTextField-root\": {\n        borderBottom : \"4px solid white\",\n        paddingBottom: \"1em\",\n        paddingRight: \"1em\"\n      }\n  },\n  actions : {\n    textAlign : \"center\",\n    \"& button\": {\n        width: \"99%\"\n    }\n  },\n  conn_str: {backgroundColor: \"#ccc\",  fontFamily: \"Consolas\" }\n});\n\n\nconst C2Rpc = (url, data, options) => {\n    const defaultOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', \n                    'Authorization' : `Bearer ${localStorage.getItem('auth_token')}` },\n        body: JSON.stringify(data || {})\n    }\n    const requestOptions = Object.assign(defaultOptions, options || {})\n    return fetch(url, requestOptions)\n}\n\nconst ApiModal = (props) => {\n    const conf = useConf()\n    const create_api = (record) =>{\n        const create_url = `${conf.api_root}/Apis/${record.id}/generate`\n        setOutput(<Loading/>)\n        box_style.top = \"90%\"\n        setBoxStyle(box_style)\n        C2Rpc(create_url)\n            .then(response => response.json())\n            .then(data => {\n                setOutput(<pre>{data}</pre>)\n            })\n    }\n    \n    const [open, setOpen] = React.useState(false);\n    const [output, setOutput] = React.useState(\"\");\n    const [box_style, setBoxStyle] = React.useState(boxStyle);\n    const handleOpen = (e) => {setOpen(true); e.stopPropagation();}\n    const handleClose = (e) => {e.stopPropagation();setOpen(false);}\n    const record = props.record\n    const classes = useStyles()\n    \n    return (\n        <span>\n        <span onClick={handleOpen} className={classes.joined_field} title={` Relationship` }><PlayCircleOutlineIcon/></span>\n        <Modal\n            className={classes.modalStyle}\n            open={open}\n            onClose={handleClose}\n            onClick={(e)=>e.stopPropagation()}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        >\n            <Box sx={box_style}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                Create API \n            </Typography>\n                Pressing the button will generate an API with the following properties:\n                <dl>\n                <dt>Name:</dt>\n                <dd>{record?.name}</dd>\n                <dt>Database URL:</dt>\n                <dd>{record?.connection_string}</dd>\n                <dt>Port:</dt>\n                <dd>{record?.port}</dd>\n                <dt>Hostname:</dt>\n                <dd>{record?.hostname}</dd>\n                </dl>\n                <Button variant=\"outlined\" onClick={()=>create_api(record)}> Start <PlayCircleOutlineIcon/> </Button>\n                <hr/>\n                \n                {output}\n                \n            </Box>\n        </Modal>\n        </span>\n    );\n}\n\nexport const ApiGenerateField = (props) => {\n\n  if(props.mode === \"list\"){\n      return <ApiModal {...props}/>\n  }\n  return <></>\n}\n\nexport const ApiShow = (props) => {\n    return <>\n                <div>xxxx</div>\n                {props.show}\n            </>\n}\n\nconst DBConnectionEdit = (props) => {\n    const form = useForm();\n    const record = useRecordContext();\n    let value = record ? record[\"connection_string\"] : \"\";\n    const classes = useStyles()\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [box_style,] = React.useState(boxStyle);\n    const [other, setOther] = React.useState(value);\n    const [username, setUsername] = React.useState(\"user\");\n    const [password, setPassword] = React.useState(\"pass\");\n    const [dbhost, setDbhost] = React.useState(\"dbhost\");\n    const [dbname, setDbname] = React.useState(\"dbname\");\n    const [dialect, setDialect] = React.useState(\"Other\");\n    const [logdata, setLogData] = React.useState(\"\")\n    const conf = useConf()\n\n    const selectDialect = (e) => {\n        const dialect = e.target.value\n        setDialect(dialect)\n        if(dialect === \"sqlite\"){\n            setUsername(\"\")\n            setPassword(\"\")\n            setDbhost(\"\")\n        }\n    }\n\n    const create_conn = () => {\n        let result = `${dialect}://`\n        if(dialect === \"Other\"){\n            result = other\n        }\n        else if(dialect === \"sqlite\"){\n            result += `/${dbname}`\n        }\n        else {\n            result += `${username}:${password}@${dbhost}/${dbname}`\n        }\n        return result\n    }\n\n    const test_conn = (connection_string) => {\n        const create_url = `${conf.api_root}/Apis/test_conn`\n        const req_data = { connection_string : connection_string}\n        C2Rpc(create_url, req_data)\n        .then(response => response.json())\n        .then(data => {\n            setLogData(<><Typography variant=\"h6\" component=\"h2\">Result:</Typography><pre>{data}</pre></>)\n            })\n        .catch(err => alert())\n    }\n\n    const create_api = () =>{\n        if(record.id === undefined){\n            const msg = \"you must first save the api\"\n            alert(msg)\n            setLogData(msg)\n            return\n        }\n        const create_url = `${conf.api_root}/Apis/${record.id}/generate`\n        setLogData(<Loading/>)\n        box_style.top = \"90%\"\n        C2Rpc(create_url)\n            .then(response => response.json())\n            .then(data => {\n                setLogData(<pre>{data}</pre>)\n            })\n    }\n\n\n    return <>\n            <Grid item xs={12} spacing={4} margin={5} ></Grid>\n            <Grid item xs={4} spacing={4} margin={5} >\n                <TextInput source={'connection_string'} initialValue={create_conn()} helperText=\"SQLAlchemy connection string syntax\" fullWidth/>\n            </Grid>\n            <Grid item xs={4} spacing={4} margin={5} >\n                <Button variant=\"outlined\"\n                        onClick={handleOpen}\n                        color=\"primary\"\n                        size='large'\n                        className={classes.db_btn}\n                > \n                Configure Connection\n                </Button>\n            </Grid>\n            <Grid item xs={12} spacing={4} margin={5} ></Grid>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                className={classes.modalStyle}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n                >\n                <Box sx={box_style}>\n                <Grid container className={classes.db_grid}>\n                    <Grid item xs={12} spacing={4} margin={5} >\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Database Configuration\n                        </Typography>\n                        <hr/>\n                    </Grid>\n                    <Grid item xs={6} spacing={4} margin={5} >\n                        <FormControl>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">DB Dialect</FormLabel>\n                            <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                defaultValue=\"Other\"\n                                name=\"radio-buttons-group\"\n                                onChange={selectDialect}\n                            >\n                                <FormControlLabel value=\"mysql+pymysql\" control={<Radio />} label=\"MySQL\" />\n                                <FormControlLabel value=\"oracle\" control={<Radio />} label=\"Oracle\" />\n                                <FormControlLabel value=\"postgresql\" control={<Radio />} label=\"Postgres\" />\n                                <FormControlLabel value=\"sqlite\" control={<Radio />} label=\"SQLite\" />\n                                <FormControlLabel value=\"mssql+pyodbc\" control={<Radio />} label=\"SQLServer\" />\n                                <FormControlLabel value=\"Other\" control={<Radio />} label=\"Manual:\" />\n                            </RadioGroup>\n                            <TextField id=\"outlined-basic\" label=\"Manual\" variant=\"outlined\" \n                                        defaultValue={value}\n                                        onChange={(e) => setOther(e.target.value)} helperText=\"Manual connection string configuration\"/>\n                        </FormControl>\n                    </Grid>\n                    \n                    <Grid item xs={6} spacing={4} margin={5} >\n                        <TextField label=\"Username\" variant=\"outlined\" onChange={(e)=>setUsername(e.target.value)} value={username}/>\n                        <TextField label=\"Password\" variant=\"outlined\" onChange={(e)=>setPassword(e.target.value)} value={password}/>\n                        <TextField label=\"Database host\" variant=\"outlined\" onChange={(e)=>setDbhost(e.target.value)} value={dbhost}/>\n                        <TextField label=\"Database name\" variant=\"outlined\" onChange={(e)=>setDbname(e.target.value)} value={dbname}/>\n                    </Grid>\n                    <Grid item xs={6} spacing={4} margin={5}>\n                    <Typography>\n                        Connection String: <span className={classes.conn_str}>{create_conn()}</span>\n                    </Typography>\n                    </Grid>\n                    <Grid item xs={12} spacing={4} margin={5} className={classes.actions}>\n                        <hr/>\n                    </Grid>\n                    <Grid item xs={12} spacing={4} margin={5} />\n                    <Grid item xs={2} spacing={4} margin={5} className={classes.actions}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={()=>test_conn(create_conn()) }> Test Connection</Button>\n                    </Grid>\n                    <Grid item xs={2} spacing={4} margin={5} className={classes.actions}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={()=>{setOpen(false); form.change('connection_string',create_conn()); }} >Save &amp; Close</Button>\n                    </Grid>\n                    <Grid item xs={2} spacing={4} margin={5} className={classes.actions}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={()=>create_api() } disabled={record.id ? false : true} title={record.id? \"\" : \"you must first save the api\"}>Generate API</Button>\n                    </Grid>\n                    <Grid item xs={2} spacing={4} margin={5} className={classes.actions}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={()=>setOpen(false) }>Close</Button>\n                    </Grid>\n                    \n                    <Grid item xs={12} spacing={4} margin={5} className={classes.logdata}>\n                        {logdata}\n                    </Grid>\n                </Grid>\n                </Box>\n            </Modal>\n        </>\n}\n\nexport const DBConnection = (props) => {\n    const record = useRecordContext();\n    let value = record ? record[\"connection_string\"] : \"\";\n    \n    if(props.mode !== \"edit\" && props.mode !== \"create\"){\n        return <Typography>{value}</Typography>\n    }\n    return <DBConnectionEdit {...props} />\n}\n\n\nconst api_url = (props) => {\n    const url = `/${props.name}/api`\n    return <Typography><a href={url}>{url}</a></Typography>\n}\n\nexport const ApiURL = (props) => {\n    const record = useRecordContext();\n    if(!record.id){\n        return null\n    }\n    return api_url(record)\n}\n\n\nexport const ApiAdminHome = (props) => {\n\n    const {data} = useGetList(\n            \"Apis\",\n            {pagination : {page: 0, perPage: 100}}\n        )\n    \n    const apis = data?.map(api => <li>{api_url(api)}</li>)\n\n    return <>\n                <Typography variant=\"h6\" component=\"h2\"> APIs</Typography>\n                <Typography>\n                    <ul>\n                        {apis}\n                    </ul>\n                </Typography>\n            </>\n}","\nexport const MyComp = (props) => {\n    return <div>HMMMM</div>\n}","import Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport {\n    TextField,\n    PasswordInput\n} from \"react-admin\";\n\nimport {useRecordContext} from \"react-admin\";\nexport * from './external/UserPasswordTab'\nexport * from './ApiAdmin'\nexport * from './external'\n\n\nexport const SampleColumnField = ({attribute}) => {\n    return <TextField source={attribute.name} key={attribute.name} style={{color : \"red\" }} />\n}\n\nexport const EmployeeLabel = (props) => {\n    const employee = props.instance\n    return <div> {employee.attributes?.FirstName} {employee.attributes?.LastName}</div>\n}\n\nexport const CustomerLabel = (props) => {\n    const customer = props.instance\n    return <div> <b>{customer.attributes?.CompanyName}</b> <i>{customer.attributes?.ContactName}</i></div>\n}\n\nexport const UserPasswordField = (props) => {\n\n    if(props.mode === \"list\"){\n        return <span/>\n    }\n    if(props.mode === \"edit\"){\n        return <>\n            <Grid item xs={12} spacing={4} margin={5} >\n                <Typography variant=\"h6\" component=\"h6\" >Change Password</Typography>\n            </Grid>\n            <Grid item xs={4} spacing={4} margin={5} ><PasswordInput source=\"_password\" /> </Grid>\n            <Grid item xs={4} spacing={4} margin={5} ><PasswordInput source=\"_password\" /> </Grid>\n            <Grid item xs={4} spacing={4} margin={5} ></Grid>\n        </>\n    }\n    return <></>\n}\n\nexport const CustomTab = (props) => {\n    // eslint-disable-next-line no-unused-vars\n    const record = useRecordContext();\n    return <div>Some Text</div>\n}\n"],"names":["UserPasswordTab","conf","useConf","notify","useNotify","record","useRecordContext","useDataProvider","useState","pwdValue","setPwdValue","rpwdValue","setRPwdValue","submitColor","setSubmitColor","Box","component","sx","m","width","noValidate","autoComplete","FormControl","Grid","item","xs","spacing","margin","Typography","variant","id","label","type","onChange","e","target","value","length","console","log","Button","color","onClick","data","httpAuthClient","api_root","method","body","JSON","stringify","then","catch","ApiUserPasswordTab","setCurPwdValue","newPwdValue","setNewPwdValue","boxStyle","position","top","left","transform","bgcolor","border","boxShadow","p","textAlign","useStyles","makeStyles","joined_field","cursor","modalStyle","overflow","height","fontWeight","display","db_btn","db_grid","borderBottom","paddingBottom","paddingRight","actions","conn_str","backgroundColor","fontFamily","C2Rpc","url","options","defaultOptions","headers","localStorage","getItem","requestOptions","Object","assign","fetch","ApiModal","props","React","open","setOpen","output","setOutput","box_style","setBoxStyle","classes","stopPropagation","className","title","PlayCircleOutline","Modal","onClose","name","connection_string","port","hostname","create_url","Loading","response","json","create_api","ApiGenerateField","mode","ApiShow","show","DBConnectionEdit","form","useForm","other","setOther","username","setUsername","password","setPassword","dbhost","setDbhost","dbname","setDbname","dialect","setDialect","logdata","setLogData","create_conn","result","TextInput","source","initialValue","helperText","fullWidth","size","container","FormLabel","RadioGroup","defaultValue","FormControlLabel","control","Radio","err","alert","test_conn","change","undefined","msg","disabled","DBConnection","api_url","href","ApiURL","ApiAdminHome","useGetList","pagination","page","perPage","apis","map","api","MyComp","SampleColumnField","attribute","TextField","style","EmployeeLabel","employee","instance","attributes","FirstName","LastName","CustomerLabel","customer","CompanyName","ContactName","UserPasswordField","PasswordInput","CustomTab"],"sourceRoot":""}